<?php

namespace Application\Migrations;

use Doctrine\DBAL\Migrations\AbstractMigration,
    Doctrine\DBAL\Schema\Schema;

/**
 * Auto-generated Migration: Please modify to your need!
 */
class Version20130129200052 extends AbstractMigration
{
    public function up(Schema $schema)
    {
        // this up() migration is autogenerated, please modify it to your needs
        $this->abortIf($this->connection->getDatabasePlatform()->getName() != "mysql");

        // Added to prevent conflicts with old migration Version20121126230350
        $this->addSql("SET FOREIGN_KEY_CHECKS = 0");
        $this->addSql("DROP TABLE IF EXISTS region");
        $this->addSql("DROP TABLE IF EXISTS region_country");
        $this->addSql("SET FOREIGN_KEY_CHECKS = 1");

        $this->addSql("CREATE TABLE region (id INT AUTO_INCREMENT NOT NULL, site_id INT DEFAULT NULL, name VARCHAR(255) NOT NULL, UNIQUE INDEX UNIQ_F62F176F6BD1646 (site_id), PRIMARY KEY(id)) ENGINE = InnoDB");
        $this->addSql("CREATE TABLE region_country (region_id INT NOT NULL, country_id INT NOT NULL, INDEX IDX_4861B8E198260155 (region_id), INDEX IDX_4861B8E1F92F3E70 (country_id), PRIMARY KEY(region_id, country_id)) ENGINE = InnoDB");
        $this->addSql("ALTER TABLE region ADD CONSTRAINT FK_F62F176F6BD1646 FOREIGN KEY (site_id) REFERENCES pd_site(id)");
        $this->addSql("ALTER TABLE region_country ADD CONSTRAINT FK_4861B8E198260155 FOREIGN KEY (region_id) REFERENCES region(id) ON DELETE CASCADE");
        $this->addSql("ALTER TABLE region_country ADD CONSTRAINT FK_4861B8E1F92F3E70 FOREIGN KEY (country_id) REFERENCES country(id) ON DELETE CASCADE");
        $this->addSql('INSERT INTO `region` (`id`,`site_id`,`name`) VALUES (1,"1","Demo"), (2,"2","Japan"), (3,"3","China"), (4,"4","North America"), (5,"5","Europe"), (6,"6","Latin America"), (7,"7","India"), (8,"8","Singapore"), (9,"9","Australia / New Zealand"), (10,null,"Asia Pacific/Japan"), (11,null,"Western Europe"), (12,null,"Central Europe")');
        $this->addSql('INSERT INTO `region_country` (`region_id`, `country_id`) VALUES (1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (1, 6), (1, 7), (1, 8), (1, 9), (1, 10), (1, 11), (1, 12), (1, 13), (1, 14), (1, 15), (1, 16), (1, 17), (1, 18), (1, 19), (1, 20), (1, 21), (1, 22), (1, 23), (1, 24), (1, 25), (1, 26), (1, 27), (1, 28), (1, 29), (1, 30), (1, 31), (1, 32), (1, 33), (1, 34), (1, 35), (1, 36), (1, 37), (1, 38), (1, 39), (1, 40), (1, 41), (1, 42), (1, 43), (1, 44), (1, 45), (1, 46), (1, 47), (1, 48), (1, 49), (1, 50), (1, 51), (1, 52), (1, 53), (1, 54), (1, 55), (1, 56), (1, 57), (1, 58), (1, 59), (1, 60), (1, 61), (1, 62), (1, 63), (1, 64), (1, 65), (1, 66), (1, 67), (1, 68), (1, 69), (1, 70), (1, 71), (1, 72), (1, 73), (1, 74), (1, 75), (1, 76), (1, 77), (1, 78), (1, 79), (1, 80), (1, 81), (1, 82), (1, 83), (1, 84), (1, 85), (1, 86), (1, 87), (1, 88), (1, 89), (1, 90), (1, 91), (1, 92), (1, 93), (1, 94), (1, 95), (1, 96), (1, 97), (1, 98), (1, 99), (1, 100), (1, 101), (1, 102), (1, 103), (1, 104), (1, 105), (1, 106), (1, 107), (1, 108), (1, 109), (1, 110), (1, 111), (1, 112), (1, 113), (1, 114), (1, 115), (1, 116), (1, 117), (1, 118), (1, 119), (1, 120), (1, 121), (1, 122), (1, 123), (1, 124), (1, 125), (1, 126), (1, 127), (1, 128), (1, 129), (1, 130), (1, 131), (1, 132), (1, 133), (1, 134), (1, 135), (1, 136), (1, 137), (1, 138), (1, 139), (1, 140), (1, 141), (1, 142), (1, 143), (1, 144), (1, 145), (1, 146), (1, 147), (1, 148), (1, 149), (1, 150), (1, 151), (1, 152), (1, 153), (1, 154), (1, 155), (1, 156), (1, 157), (1, 158), (1, 159), (1, 160), (1, 161), (1, 162), (1, 163), (1, 164), (1, 165), (1, 166), (1, 167), (1, 168), (1, 169), (1, 170), (1, 171), (1, 172), (1, 173), (1, 174), (1, 175), (1, 176), (1, 177), (1, 178), (1, 179), (1, 180), (1, 181), (1, 182), (1, 183), (1, 184), (1, 185), (1, 186), (1, 187), (1, 188), (1, 189), (1, 190), (1, 191), (1, 192), (1, 193), (1, 194), (1, 195), (1, 196), (1, 197), (1, 198), (1, 199), (1, 200), (1, 201), (1, 202), (1, 203), (1, 204), (1, 205), (1, 206), (1, 207), (1, 208), (1, 209), (1, 210), (1, 211), (1, 212), (1, 213), (1, 214), (1, 215), (1, 216), (1, 217), (1, 218), (1, 219), (1, 220), (1, 221), (1, 222), (1, 223), (1, 224), (1, 225), (1, 226), (1, 227), (1, 228), (1, 229), (1, 230), (1, 231), (1, 232), (1, 233), (1, 234), (1, 235), (1, 236), (1, 237), (1, 238), (1, 239), (1, 240), (1, 241), (1, 242), (1, 243), (1, 244), (1, 245), (1, 246), (1, 247), (1, 248), (1, 249), (1, 250), (1, 251), (1, 252), (1, 253), (1, 254), (1, 255), (2, 116), (3, 49), (4, 41), (4, 244), (4, 195), (4, 191), (5, 3), (5, 12), (5, 16), (5, 17), (5, 22), (5, 23), (5, 29), (5, 36), (5, 60), (5, 62), (5, 63), (5, 64), (5, 74), (5, 80), (5, 81), (5, 87), (5, 88), (5, 91), (5, 105), (5, 106), (5, 111), (5, 114), (5, 119), (5, 123), (5, 125), (5, 131), (5, 132), (5, 134), (5, 148), (5, 202), (5, 159), (5, 170), (5, 182), (5, 183), (5, 187), (5, 188), (5, 207), (5, 208), (5, 214), (5, 220), (5, 221), (5, 224), (5, 235), (5, 241), (5, 243), (5, 246), (5, 6), (5, 242), (5, 1), (5, 160), (5, 7), (5, 9), (5, 5), (5, 37), (5, 19), (5, 38), (5, 25), (5, 31), (5, 30), (5, 55), (5, 45), (5, 59), (5, 40), (5, 43), (5, 66), (5, 4), (5, 70), (5, 252), (5, 73), (5, 75), (5, 78), (5, 85), (5, 97), (5, 89), (5, 90), (5, 92), (5, 98), (5, 99), (5, 102), (5, 113), (5, 112), (5, 33), (5, 110), (5, 109), (5, 117), (5, 118), (5, 120), (5, 121), (5, 122), (5, 126), (5, 130), (5, 215), (5, 128), (5, 127), (5, 129), (5, 153), (5, 149), (5, 135), (5, 139), (5, 143), (5, 140), (5, 144), (5, 138), (5, 136), (5, 154), (5, 156), (5, 164), (5, 165), (5, 171), (5, 173), (5, 185), (5, 186), (5, 189), (5, 200), (5, 204), (5, 216), (5, 218), (5, 205), (5, 198), (5, 201), (5, 210), (5, 199), (5, 222), (5, 219), (5, 47), (5, 84), (5, 228), (5, 233), (5, 230), (5, 234), (5, 225), (5, 240), (5, 248), (5, 253), (5, 145), (5, 211), (5, 254), (5, 255), (6, 10), (6, 8), (6, 11), (6, 13), (6, 21), (6, 26), (6, 28), (6, 18), (6, 24), (6, 146), (6, 48), (6, 53), (6, 58), (6, 67), (6, 68), (6, 69), (6, 93), (6, 96), (6, 100), (6, 103), (6, 101), (6, 115), (6, 192), (6, 44), (6, 193), (6, 163), (6, 176), (6, 179), (6, 184), (6, 178), (6, 217), (6, 71), (6, 231), (6, 237), (6, 236), (6, 245), (6, 196), (6, 249), (6, 34), (6, 239), (6, 32), (6, 57), (6, 61), (6, 77), (6, 82), (6, 94), (6, 212), (6, 142), (6, 152), (6, 238), (7, 107), (8, 108), (8, 213), (8, 137), (8, 206), (9, 15), (9, 162), (10, 15), (10, 108), (10, 107), (10, 116), (10, 213), (10, 137), (10, 162), (10, 206), (10, 20), (10, 35), (10, 27), (10, 52), (10, 50), (10, 79), (10, 147), (10, 95), (10, 104), (10, 39), (10, 54), (10, 168), (10, 124), (10, 141), (10, 155), (10, 150), (10, 133), (10, 169), (10, 161), (10, 167), (10, 158), (10, 157), (10, 166), (10, 83), (10, 177), (10, 180), (10, 181), (10, 174), (10, 209), (10, 226), (10, 229), (10, 227), (10, 223), (10, 250), (10, 247), (10, 251), (10, 197), (10, 49), (11, 23), (11, 221), (11, 64), (11, 214), (11, 114), (11, 159), (11, 170), (11, 220), (11, 80), (11, 132), (11, 183), (12, 3), (12, 12), (12, 17), (12, 29), (12, 36), (12, 22), (12, 62), (12, 63), (12, 74), (12, 87), (12, 91), (12, 60), (12, 105), (12, 106), (12, 123), (12, 119), (12, 131), (12, 125), (12, 148), (12, 151), (12, 134), (12, 182), (12, 187), (12, 202), (12, 188), (12, 208), (12, 207), (12, 224), (12, 235), (12, 241), (12, 246)');
    }

    public function down(Schema $schema)
    {
        // this down() migration is autogenerated, please modify it to your needs
        $this->abortIf($this->connection->getDatabasePlatform()->getName() != "mysql");

        $this->addSql("ALTER TABLE region_country DROP FOREIGN KEY FK_4861B8E198260155");
        $this->addSql("DROP TABLE region");
        $this->addSql("DROP TABLE region_country");
    }
}
