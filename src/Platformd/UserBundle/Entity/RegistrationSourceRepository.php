<?php

namespace Platformd\UserBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\AbstractQuery;
use Doctrine\ORM\QueryBuilder;
use DateTime;

/**
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RegistrationSourceRepository extends EntityRepository
{
    public function getRegistrationActivityData($settings)
    {
        $countryQb = $this->createQueryBuilder('r')
            ->leftJoin('r.country', 'c');

        foreach ($settings as $index => $row) {

            if (isset($row['count'])) {
                continue;
            }

             $qb = $this->createQueryBuilder('rs')
                ->select('COUNT(rs.id)')
                ->leftJoin('rs.country', 'c');

            if ($row['activity_type']) {
                $qb->andWhere('rs.sourceType = :activity_type')
                    ->setParameter('activity_type', $row['activity_type']);
            }

            if ($row['activity_id']) {
                $qb->andWhere('rs.sourceId = :activity_id')
                    ->setParameter('activity_id', $row['activity_id']);
            }

            if ($row['from']) {
                $fromDt = new DateTime($row['from']);
                $qb->andWhere('rs.created >= :from')
                    ->setParameter('from', $fromDt);
            }

            if ($row['to']) {
                $toDt = new DateTime($row['to']);
                $toDt->setTime(23,59,59);
                $qb->andWhere('rs.created <= :to')
                    ->setParameter('to', $toDt);
            }

            if (isset($row['country']) && $row['country']) {
                $qb->andWhere('c.id = :country')
                    ->setParameter('country', $row['country']);
            }

            if (isset($row['region']) && $row['region']) {
                $qb->leftJoin('c.regions', 'r')
                    ->andWhere('r.id = :region')
                    ->setParameter('region', $row['region']);
            }

            $result = $qb->getQuery()->getSingleScalarResult();

            $settings[$index]['count'] = $result;
        }

        return $settings;
    }

}
