imports:
    - { resource: "validation.yml" }

parameters:
    platformd_user.mailer.parameters:
        confirmation.template: %fos_user.registration.confirmation.template%
        resetting.template: %fos_user.resetting.email.template%

services:
    # Forms
    platformd_user.registration.form.type:
        class: Platformd\UserBundle\Form\Type\RegistrationFormType
        arguments:
            - %fos_user.model.user.class%
            - %platformd.news_source%
            - @session
            - @platformd.model.translator
        scope: request
        calls:
            - [ setPrefectures, [ %platformd.prefectures% ] ]
        tags:
            - { name: form.type, alias: platformd_user_registration }
    platformd_user.profile.form.type:
        class: Platformd\UserBundle\Form\Type\ProfileFormType
        arguments:
            - %fos_user.model.user.class%
        tags:
            - { name: form.type, alias: platformd_user_profile }

    platformd_user.account.incomplete_form.type:
        class: Platformd\UserBundle\Form\Type\IncompleteFormType
        tags:
            - { name: form.type, alias: platformd_incomplete_account }

    platformd_user.registration.form.handler:
        class: Platformd\UserBundle\Form\Handler\RegistrationFormHandler
        arguments:
            - @fos_user.registration.form
            - @request
            - @platformd_user.manager
            - @platformd_user.mailer
            - @doctrine.orm.entity_manager
            - @service_container
            - @platformd.model.ip_lookup_util
        scope: request

    # User
    platformd_user.manager:
        class: Platformd\UserBundle\Entity\UserManager
        parent: fos_user.user_manager.default
        calls:
            - [ setContainer, ['@service_container'] ]
            - [ setFilesystem, ['@avatar_filesystem']]

    platformd.avatar_resolver:
        class:  'Platformd\UserBundle\AvatarPathResolver'
        arguments:
            - @avatar_filesystem
            - avatars
        parent: platformd.path_resolver
        tags:
            - { name: 'knp_media_exposer.resolver' }

    # our custom mailer
    platformd_user.mailer:
        class: Platformd\UserBundle\Mailer\Mailer
        arguments:
            - '@platformd.model.email_manager'
            - '@router'
            - '@templating'
            - '%platformd_user.mailer.parameters%'
            - '@platformd.util.site_util'

    platformd.model.avatar_manager:
        class: Platformd\UserBundle\Model\AvatarManager
        arguments:
            - '@doctrine.orm.entity_manager'
            - '@avatar_filesystem'
            - '%s3_bucket_name%'
            - '%s3_private_bucket_name%'
            - '@platformd.s3'
            - '@platformd.util.queue_util'

    platformd.avatar.s3.adapter:
        class: Gaufrette\Adapter\AmazonS3
        arguments:
            - @platformd.s3
            - "%s3_private_bucket_name%"
        calls:
            - [ "setDirectory", [ "images/avatars"]]

    platformd.facebook.provider:
        class: Platformd\UserBundle\Security\User\Provider\FacebookProvider
        arguments:
            facebook: "@fos_facebook.api"
            userManager: "@fos_user.user_manager"
            validator: "@validator"
            container: "@service_container"
