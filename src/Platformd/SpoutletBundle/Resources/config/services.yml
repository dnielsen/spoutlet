services:
    platformd.s3:
        class: AmazonS3
        arguments:
            - { key: %s3.access_key%, secret: %s3.secret_key% }

    # adapters for Gaufrette filesystems
    platformd.avatar.s3.adapter:
        class: Gaufrette\Adapter\AmazonS3
        arguments:
            - @platformd.s3
            - "%s3_bucket_name%"
    platformd.event.s3.adapter:
        class: Gaufrette\Adapter\AmazonS3
        arguments:
            - @platformd.s3
            - "%s3_bucket_name%"

    platformd.path_resolver:
        class:  'Platformd\SpoutletBundle\PathResolver'
        public: false
        abstract: true
        calls:
            - [ setBucket, [ "%s3_bucket_name%" ]]

    twig.extension_text:
        class: Twig_Extensions_Extension_Text
        arguments: []
        tags:
            - { name: twig.extension }

    platformd.breadcrumbs_renderer:
        class: Platformd\SpoutletBundle\Menu\BreadcrumbsRenderer
        tags:
            - { name: knp_menu.renderer, alias: breadcrumbs }

    platformd.menu_builder:
        class: Platformd\SpoutletBundle\Menu\MenuBuilder
        arguments:
            - "@knp_menu.factory"
            - "@router"

    platformd.breadcrumbs_admin_menu:
        class: Knp\Menu\MenuItem
        scope: request
        factory_service: "platformd.menu_builder"
        factory_method: createAdminBreadcrumbs
        arguments:
            - "@request"
        tags:
            - { name: knp_menu.menu, alias: admin_breadcrumbs }

    # our metric manager service
    platformd.metric_manager:
        class: Platformd\SpoutletBundle\Metric\MetricManager
        arguments:
            - "@doctrine.orm.entity_manager"
            # TODO this should NOT be hardcoded
            - %platformd_sites%

    # the custom slug constraint for AbstractEvent
    platformd.validation.abstract_event_unique_slug_validator:
        class: Platformd\SpoutletBundle\Validator\AbstractEventUniqueSlugValidator
        arguments:
            - "@doctrine.orm.entity_manager"
        tags:
            - { name: validator.constraint_validator, alias: abstract_event.unique_slug }

    # the linkable manager
    platformd.link.linkable_manager:
        class: Platformd\SpoutletBundle\Link\LinkableManager
        arguments:
            - "@router"

    # our generic twig extension
    platformd.twig.spoutlet_extension:
        class: Platformd\SpoutletBundle\Twig\SpoutletExtension
        arguments:
            - "@service_container"
        public: false
        tags:
            - { name: twig.extension }

    platformd.form.extension.help_form_type_extension:
        class: Platformd\SpoutletBundle\Form\Extension\HelpFormTypeExtension
        tags:
            - { name: form.type_extension, alias: field }

    platford.model.site_util:
        class: Platformd\SpoutletBundle\Util\SiteUtil
        arguments:
            - "@doctrine.orm.entity_manager"
            - "@request"
        scope: request

    platformd.model.email_manager:
        class: Platformd\SpoutletBundle\Model\EmailManager
        arguments:
            - "@service_container"
            - "@doctrine.orm.entity_manager"
            - "@aws_ses"

    # activity manager service
    platformd.model.activity_manager:
        class: Platformd\SpoutletBundle\Model\ActivityManager
        arguments:
            - "@doctrine.orm.entity_manager"

    platformd.listener.group_discussion_listener:
        class: Platformd\SpoutletBundle\EventListener\GroupDiscussionListener
        arguments:
            - "@platformd.model.group_manager"
        tags:
            - { name: kernel.event_listener, event: awa.discussionPost.create, method: onAddToDiscussion }
            - { name: kernel.event_listener, event: awa.content.reinstate, method: onAddToDiscussion }
            - { name: kernel.event_listener, event: awa.discussionPost.delete, method: onRemoveFromDiscussion }
            - { name: kernel.event_listener, event: awa.content.report, method: onRemoveFromDiscussion }
        scope: request

    platformd.listener.global_activity_listener:
        class: Platformd\SpoutletBundle\EventListener\GlobalActivityListener
        arguments:
            - "@platformd.model.activity_manager"
        tags:
            - { name: kernel.event_listener, event: awa.group.join, method: onGroupJoin }
            - { name: kernel.event_listener, event: awa.group.leave, method: onGroupLeave }
            - { name: kernel.event_listener, event: awa.discussion.create, method: onDiscussionCreate }
            - { name: kernel.event_listener, event: awa.discussion.view, method: onDiscussionView }
            - { name: kernel.event_listener, event: awa.discussion.delete, method: onDiscussionDelete }
            - { name: kernel.event_listener, event: awa.content.report, method: onReportDiscussion }
            - { name: kernel.event_listener, event: awa.discussionPost.create, method: onAddToDiscussion }
        scope: request

    platformd.doctrine.locales_relationship_listener:
        class: Platformd\SpoutletBundle\Doctrine\LocalesRelationshipListener
        tags:
            - { name: doctrine.event_subscriber }

    platformd.age.age_manager:
        class: Platformd\SpoutletBundle\Age\AgeManager
        arguments:
            - "@security.context"
            - "@session"
        scope: request

    platformd.age.insufficient_age_listener:
        class: Platformd\SpoutletBundle\Age\InsufficientAgeListener
        arguments:
            - "@router"
            - "@platformd.age.age_manager"
            - "@templating"
        tags:
            - { name: kernel.event_listener, event: kernel.exception }
        scope: request

    platformd.tenant.site_protection_listener:
        class: Platformd\SpoutletBundle\Tenant\SiteProtectionListener
        arguments:
            - "%allowed_sites%"
            - "@pd.cevo.cevo_auth_manager"
            - %allow_cevo_forwarding%
        tags:
            - { name: kernel.event_listener, event: kernel.request }

    platformd.locale.locales_relationship_helper:
        class: Platformd\SpoutletBundle\Locale\LocalesRelationshipHelper
        arguments:
            - "@doctrine.orm.entity_manager"

    platformd.cache.memcached:
        class: Memcached

    pagerfanta.view.spoutlet:
        class: Platformd\SpoutletBundle\Pagerfanta\View\SpoutletView
        arguments:
            - @pagerfanta.view.default
        public: false
        tags: [{ name: pagerfanta.view, alias: spoutlet }]

    platformd.form.transformer.html_purifier_basic:
        class: Exercise\HTMLPurifierBundle\Form\HTMLPurifierTransformer
        arguments:
            - "@exercise_html_purifier.editor_basic"

    platformd.form.transformer.html_purifier_admin:
        class: Exercise\HTMLPurifierBundle\Form\HTMLPurifierTransformer
        arguments:
            - "@exercise_html_purifier.editor_admin"

    platformd.form.type.purified_textarea_field:
        class: Platformd\SpoutletBundle\Form\Type\PurifiedTextareaType
        arguments:
            - "@platformd.form.transformer.html_purifier_basic"
            - "@platformd.form.transformer.html_purifier_admin"
            - "@security.context"
        tags:
            - { name: form.type, alias: purifiedTextarea }

    platformd.form.type.gmtOffsetTimezone:
        class: Platformd\SpoutletBundle\Form\Type\GmtOffsetTimezoneType
        tags:
            - { name: form.type, alias: gmtTimezone }

