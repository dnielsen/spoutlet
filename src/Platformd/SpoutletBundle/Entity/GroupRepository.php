<?php

namespace Platformd\SpoutletBundle\Entity;

use Platformd\SpoutletBundle\Entity\Group;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\QueryBuilder;
use DateTime;
use DateTimeZone;

/**
 * GroupsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class GroupRepository extends EntityRepository
{
    public function getGroupAndMemberCountByRegion() {

        return $this->getEntityManager()->createQuery('
            SELECT s.name region, COUNT(DISTINCT g.id) groups, COUNT(DISTINCT m.id) members FROM SpoutletBundle:Group g
            LEFT JOIN g.sites s
            LEFT JOIN g.members m
            WHERE g.deleted = false
            GROUP BY s.id')
            ->execute();
    }

    public function findAllGroupsRelevantForSite($site) {

        return $this->getEntityManager()->createQuery('
            SELECT g FROM SpoutletBundle:Group g
            LEFT JOIN g.sites s
            WHERE g.deleted = false
            AND (g.allLocales = true OR s = :site)')
            ->setParameter('site', $site)
            ->execute();
    }

    public function findGroupsByName($groupName)
    {
        $qb = $this->createQueryBuilder('g')
            ->where('g.name like :groupName')
            ->andWhere('g.deleted = false')
            ->setParameter('groupName', '%'.$groupName.'%');

        return $qb->getQuery()->execute();
    }

    public function findGroupsByNameAndSite($groupName, $site)
    {
        $qb = $this->createQueryBuilder('g')
            ->leftJoin('g.sites', 's')
            ->where('g.name like :groupName')
            ->andWhere('(s = :site OR g.allLocales = true)')
            ->andWhere('g.deleted = false')
            ->setParameter('groupName', '%'.$groupName.'%')
            ->setParameter('site', $site);

        return $qb->getQuery()->execute();
    }
}
