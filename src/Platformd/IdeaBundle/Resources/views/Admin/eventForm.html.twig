{% extends 'IdeaBundle::group_layout.html.twig' %}

{% block javascripts %}
    {{ parent() }}

    <script type="text/javascript">
        $(function() {

            var onlineInput      = $('#event_online');
            var externalInput    = $('#event_external');
            var noDateInput      = $('#event_noDate');
            var startYearInput   = $('#event_startsAt_date_year');
            var startMonthInput  = $('#event_startsAt_date_month');
            var startDayInput    = $('#event_startsAt_date_day');
            var startHourInput   = $('#event_startsAt_time_hour');
            var startMinuteInput = $('#event_startsAt_time_minute');
            var endYearInput     = $('#event_endsAt_date_year');
            var endMonthInput    = $('#event_endsAt_date_month');
            var endDayInput      = $('#event_endsAt_date_day');
            var endHourInput     = $('#event_endsAt_time_hour');
            var endMinuteInput   = $('#event_endsAt_time_minute');

            // Initialize location controls state based on default online value
            toggleLocationControls();
            toggleRegistrationControls();
            toggleDateControls();

            onlineInput.change  (function() { toggleLocationControls(); });
            externalInput.change(function() { toggleRegistrationControls(); });
            noDateInput.change  (function() { toggleDateControls(); });


            {% if isNew %}

                startHourInput.val('8');
                startMinuteInput.val('0');
                endHourInput.val('17');
                endMinuteInput.val('0');

                startDayInput.change(function() {
                    endDayInput.val($(this).val());
                });

            {% endif %}

            function toggleDateControls() {
                if (noDateInput.is(':checked')) {
                    
                    startDayInput.slideUp();
                    $('#event_startsAt_time').slideUp();
                    $('#event_startsAt').prev().text('Month of Event');
                    $('#event_endsAt').slideUp();
                    $('#event_endsAt').prev().slideUp();

                } else {

                    startDayInput.slideDown();
                    $('#event_startsAt_time').slideDown();
                    $('#event_startsAt').prev().text('Start Date');
                    $('#event_endsAt').slideDown();
                    $('#event_endsAt').prev().slideDown();
                }
            }

            function toggleLocationControls() {

                if(onlineInput.attr('checked') == 'checked') {
                    $('#location-controls').slideUp();
                    $('#event_location').val(null);
                    $('#event_address1').val(null);
                    $('#event_address2').val(null);

                } else {
                    $('#location-controls').slideDown();
                }
            }

            function toggleRegistrationControls() {

                if($('#event_external').val() == '1') {

                    // Using external registration
                    $('#registration-controls').slideUp();
                    $('#registration-option').slideUp();
                    $('#event_registrationFields :input').each(function() {
                        $(this).parent().remove();
                    });
                    $('label[for="event_externalUrl"]').text('Link to Event: ');
                    // TODO: Require external Url
                }
                else {

                    // Using campsite registration
                    $('#registration-controls').slideDown();
                    $('#registration-option').slideDown();
                    $('label[for="event_externalUrl"]').text('Registration Link (optional): ');
                    // TODO: Remove requirement for external Url
                }

            }

            // Dynamically add registration fields to form as needed
            var addFieldLink     = $('<a href="#" class="blue">Add a registration field</a>');
            var deleteFieldLink  = '<a href="#" class="deleteField left spcr-r"><img src="{{ asset("themes/ideacontest/spoutlet/img/delete-icon.png") }}" class="delete"/></a>';
            var collectionHolder = $('#event_registrationFields');

            // Add delete link to each existing registration field
            collectionHolder.find('div').each(function(){
                $(this).prepend(deleteFieldLink);
            });

            collectionHolder.append('<div class="clr"></div>')

            // Add the 'Add question' link to bottom of form
            collectionHolder.append(addFieldLink);

            // count the current registration fields we have, use that as index for adding new fields
            collectionHolder.data('index', collectionHolder.find(':input').length);

            addFieldLink.on('click', function(e) {
                e.preventDefault();
                addField(collectionHolder, addFieldLink, deleteFieldLink);
            });

            $('.deleteField').on('click', function(e) {
                e.preventDefault();
                $(this).parent().remove();
            });

            function addField(collectionHolder, addFieldLink, deleteFieldLink) {

                var prototype = collectionHolder.data('prototype');
                var index     = collectionHolder.data('index');
                var newForm   = $(prototype.replace(/\$\$name\$\$/g, index));

                collectionHolder.data('index', index + 1);

                var deleteLink = $(deleteFieldLink);
                newForm = newForm.prepend(deleteLink).append('<div class="clr"></div>');

                addFieldLink.before(newForm);

                $(deleteLink).on('click', function(e) {
                    e.preventDefault();
                    $(this).parent().remove();
                });
            }

            // Clear out empty registration fields on submit
            $('#event').submit(function() {

                $('#event_registrationFields :input').each(function()
                {
                    if ($(this).val().trim() == '') {
                        $(this).parent().remove();
                    }
                });

                // If noDate is checked, set day and time to defaults, and set End year and month equal to Start year and month
                if (noDateInput.is(':checked')) {

                    endYearInput.val(startYearInput.val());
                    endMonthInput.val(startMonthInput.val());

                    startDayInput.val('1');
                    startHourInput.val('0');
                    startMinuteInput.val('0');
                    endDayInput.val('1');
                    endHourInput.val('0');
                    endMinuteInput.val('0');
                }

                return true;
            });

        });
    </script>

{% endblock %}

{# Custom Form for registration fields -- no labels on individual fields, custom data prototype #}
{% form_theme form _self %}

{% block _event_registrationFields_widget %}
    {% spaceless %}
        {% if prototype is defined %}
            {% set data_prototype = "<div id=\"event_registrationFields_$$name$$\" class=\"form_row\"><select id=\"event_registrationFields_$$name$$_type\" name=\"event[registrationFields][$$name$$][type]\" required=\"required\" class=\"left\"><option value=\"text\">Text</option><option value=\"checkbox\">Checkbox</option></select><input type=\"text\" id=\"event_registrationFields_$$name$$_question\" name=\"event[registrationFields][$$name$$][question]\" required=\"required\" size=\"60%\" class=\"left form-txt\"></div>" %}
            {% set attr = attr|merge({'data-prototype': data_prototype}) %}
        {% endif %}
        {{ form_label(form) }}
        <div {{ block('widget_container_attributes') }}>
            {% block field_rows %}
                {{ form_errors(form) }}
                {% for child in form %}
                    {{ form_widget(child, {'attr': {'class': 'left'} }) }}
                {% endfor %}
            {% endblock %}
            {{ form_rest(form) }}
        </div>
    {% endspaceless %}
{% endblock %}

{% block group_content %}

    {% if isNew %}
        {% set verb = 'Create' %}
        {% set formpath = path('idea_admin_event', {'groupSlug': group.slug}) %}
    {% else %}
        {% set verb = 'Modify' %}
        {% set formpath = path('idea_admin_event', {'groupSlug': group.slug, 'eventId': event.id}) %}
    {% endif %}

    <h1>{{ verb }} Your Event</h1>

    <form action="{{ formpath }}" method="post" {{ form_enctype(form) }} id="event" novalidate>
        {{ form_row(form.name) }}
        {{ form_row(form.content) }}
        {{ form_row(form.noDate) }}
        {{ form_row(form.startsAt) }}
        {{ form_row(form.endsAt) }}
        {{ form_row(form.online) }}
        <div id="location-controls">
            {{ form_row(form.location) }}
            {{ form_row(form.address1) }}
            {{ form_row(form.address2) }}
        </div>
        {{ form_row(form.external) }}
        <div id="registration-option">
            {{ form_row(form.registrationOption) }}
        </div>
        <div id="registration-controls" class="spcr-b2">
            {{ form_widget(form.registrationFields) }}
        </div>
        {{ form_row(form.externalUrl) }}
        {{ form_row(form.private) }}
        {{ form_rest(form) }}

        <br class="clr"/>

        {% if not isNew %}
            <a href="{{ path('idea_admin_images', {'groupSlug': group.slug, 'eventId': event.id}) }}" class="blue">Manage Image Slider</a>
            <br class="clr"/><br/>
        {% endif %}

	    <input type="submit" value="Submit" id="submit"/>
		<input type="submit" value="Cancel" name="cancel" formnovalidate/>

        {% if not isNew %}
            {% if event.entrySets|length == 0 %}
                <a href="{{ path("group_event_delete", {"groupSlug": group.slug, "eventId": event.id}) }}">
                    <input type="button" class="spcr-l redButton" value="Delete" onclick="return confirm('Are you sure you want to delete this list?');">
                </a>
            {% else %}
                <input type="button" class="spcr-l greyButton" value="Delete Disabled" title="Remove the {{ event.EntrySets|length }} list(s) attached to this Event to enable the delete option.">
            {% endif %}
        {% endif %}

    </form>

{% endblock %}
