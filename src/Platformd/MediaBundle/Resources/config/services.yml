parameters:
    media_s3_directory: media

services:
    # gaufrette adapter - used to setup the pd_media_filesystem Gaufrette filesystem
    platformd.media.s3.adapter:
        class: Gaufrette\Adapter\AmazonS3
        arguments:
            - @platformd.s3
            - "%s3_bucket_name%"
        calls:
          - [ "setDirectory", [ %media_s3_directory%]]
          
    # set for Save on Hpcloud and Amazon S3  
    platformd.media.entity_uploadStorage:
        class: Platformd\MediaBundle\Entity\Media
        arguments:
           - "%hpcloud_accesskey%"
           - "%hpcloud_secreatkey%"
           - "%hpcloud_tenantid%"
           - "%hpcloud_url%"
           - "%hpcloud_container%"
           - "%object_storage%"          
    # media exposer path resolver
    platformd.media_path_resolver:
        class: Platformd\MediaBundle\Exposer\MediaPathResolver
        arguments:
            - %s3_bucket_name%
            - %media_s3_directory%
            - "@service_container"
        public: false
        tags:
            - { name: 'knp_media_exposer.resolver' }

    # listener for setting locale
    platformd.media.doctrine.locale_setter_listener:
        class: Platformd\MediaBundle\Doctrine\LocaleSetterListener
        arguments:
            - "@service_container"
        tags:
            - { name: doctrine.event_listener, event: prePersist }

    # custom s3 loader
    platformd.media.imagine.data.loader.s3_loader:
        class: Platformd\MediaBundle\Imagine\Data\Loader\S3Loader
        arguments:
            - "@liip_imagine"
            - "@pd_media_filesystem"
            # temporarily inject filesystem loader, for backup purposes
            - "@liip_imagine.data.loader.filesystem"
        tags:
            - { name: liip_imagine.data.loader, loader: s3 }

    # s3 cache resolver
    platformd.media.imagine.cache.resolver.amazon_s3:
        class: Platformd\MediaBundle\Imagine\Cache\Resolver\AmazonS3Resolver
        arguments:
            - "@platformd.s3"
            - "%s3_bucket_name%"
            - "@doctrine.orm.entity_manager"
            - "@service_container"
        tags:
            - { name: 'liip_imagine.cache.resolver', resolver: 'amazon_s3' }
